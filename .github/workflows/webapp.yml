name: React App CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x' # Adjust to the desired Node.js version
          cache: 'npm'

      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2  # Updated to v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Login to AWS ECR (for frontend)
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI_FRONTEND }}

      # Install dependencies
      - name: Install dependencies
        run: npm install
        working-directory: webapp

      # Build the React app
      - name: Build React App
        run: npm run build
        working-directory: webapp

      # Build Docker image for the frontend
      - name: Build Frontend Docker Image
        run: docker build -t e-commerce-frontend .
        working-directory: webapp

      # Tag and Push Docker Image to ECR (Frontend)
      - name: Tag and Push Docker Image
        run: |
          docker tag e-commerce-frontend:latest ${{ secrets.ECR_REPOSITORY_URI_FRONTEND }}:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI_FRONTEND }}:latest

      # Run Docker container for the frontend
      - name: Run Frontend Docker Container
        run: |
          docker run -d -p 80:80 e-commerce-frontend

      # Run tests (if any)
      #- name: Run Tests
      #  run: npm test
      #  working-directory: webapp

      # Optional: Deploy the app (adjust based on your deployment method)
      - name: Deploy
        run: |
          echo "Deploying the application..."
          # Add your deployment command here
